version: "3.8"

services:
  nginx:
    build: nginx
    restart: always
    volumes:
      - nginx_logs:/var/log/nginx
    ports:
      - "5010:5010"  # auth_api
    networks:
      - shop_network


  filebeat_logging:
    image: elastic/filebeat:7.12.0
    environment:
      ELASTICSEARCH_HOSTS: "http://elastic_logging:9200"
      KIBANA_HOST: "http://kibana_logging"
    volumes:
      - .Configs/filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro
      - auth_logs:/var/harvested_logs/auth:ro
      - nginx_logs:/var/harvested_logs/nginx:ro
    entrypoint: filebeat -e -strict.perms=false
    networks:
      - shop_network
    depends_on:
      elastic_logging:
        condition: service_healthy
      kibana_logging:
        condition: service_healthy

  elastic_logging:
    image: elasticsearch:7.12.0
    environment:
      xpack.security.enabled: "false"
      bootstrap.memory_lock: "true"
      network.host: 0.0.0.0
      discovery.type: single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: curl -s http://elastic_logging:9200/_cat/health >/dev/null || exit 1
      interval: 5s
      timeout: 20s
      retries: 100
    expose:
      - 9200
    networks:
      - shop_network

  kibana_logging:
    image: kibana:7.12.0
    environment:
      ELASTICSEARCH_URL: http://elastic_logging:9200
      ELASTICSEARCH_HOSTS: '["http://elastic_logging:9200"]'
    healthcheck:
      test: curl -s -I http://kibana_logging:5601 | grep -q 'HTTP/1.1 302 Found'
      interval: 5s
      timeout: 20s
      retries: 100
    expose:
      - 5601
    networks:
      - shop_network
    depends_on:
      elastic_logging:
        condition: service_healthy

volumes:
  nginx_logs:
    name: nginx_logs
  auth_logs:
    name: auth_logs

networks:
  shop_network:
    name: shop_network
    driver: bridge
