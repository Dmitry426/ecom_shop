services:
  shop_front:
    container_name: shop_front
    build:
      context: ./react_front
      dockerfile: ../Dockerfiles/React/Dockerfile
    command: npm start
    volumes:
      - "./react_front:/app"
      - "/app/node_modules"
    ports:
      - 3000:3000
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true

  fast_auth:
    build:
      context: .
      dockerfile: ./Dockerfiles/Fast_api_auth/Dockerfile
      target: development
    image: ugc_service
    command: ["python", "-m", "authorization"]
    environment:
      - PORT_APP=4000
    ports:
      - "127.0.0.1:4000:4000"
    env_file:
      - ./.env
    volumes:
      - "./fast_api/authorization:/src/authorization"

  postgres:
    image: postgres:13.0-alpine
    volumes:
      - shop_postgres:/var/lib/postgresql/data/
      - ./Configs/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${SQLALCHEMY_USERNAME}
      - POSTGRES_PASSWORD=${SQLALCHEMY_PASSWORD}
      - POSTGRES_DB=${SQLALCHEMY_DATABASE_NAME}
    ports:
      - 5432:5432

  redis_server:
    image: 'redis:alpine'
    volumes:
      - data_redis:/data
    env_file:
      - ./.env
    ports:
      - "6379:6379"
    restart: always

volumes:
  shop_postgres:
    driver: 'local'
  data_redis:
    driver: 'local'
