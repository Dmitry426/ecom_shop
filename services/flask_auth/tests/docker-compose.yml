version: "3.8"

services:
  app:
    build:
      context: ..
      target: development
      dockerfile: ../../Dockerfiles/Flask_auth/Dockerfile
    ports:
      - "127.0.0.1:3000:3000"
    command: >
      sh -c "flask db upgrade &&
             flask create_superuser -u superuser -p superpassword -m genric@gmail.com &&
             python -m app"
    healthcheck:
      test: [ "CMD" ,"nc", "-vz", "-w1", "localhost", "3000" ]
      interval: 5s
      timeout: 30s
      retries: 10
    environment:
      SQLALCHEMY_CONNECTOR: postgresql
      SQlALCHEMY_HOST: postgres
      SQLALCHEMY_USERNAME: pguser
      SQLALCHEMY_PASSWORD: pgpassword
      SQLALCHEMY_PORT: 5432
      SQLALCHEMY_DATABASE_NAME: auth_db
      JWT_SECRET_KEY: super-secret-key
      TRACING_AGENT_HOST_NAME: jaeger
      PORT_APP: 3000
      REDIS_HOST: redis
    volumes:
      - ../src/app:/home/app/src/app
      - ../src/migrations:/home/app/src/migrations
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy


  tests:
    build:
      context: ..
      target: development
      dockerfile: ../../Dockerfiles/Flask_auth/Dockerfile
    command: [ "pytest", "-v" ]
    environment:
      REDIS_HOST: redis
      SQlALCHEMY_HOST: postgres
      TEST_URL: http://app:3000
    volumes:
      - ./functional:/home/app/src/tests
      - ../src/app:/home/app/src/app
    depends_on:
      app:
        condition: service_healthy


  redis:
    image: redis:6-alpine
    restart: on-failure
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 20s
      retries: 10


  postgres:
    image: postgres:14
    restart: on-failure
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: pgpassword
      POSTGRES_DB: auth_db
    healthcheck:
      test: pg_isready -U pguser -d auth_db
      interval: 5s
      timeout: 20s
      retries: 5
